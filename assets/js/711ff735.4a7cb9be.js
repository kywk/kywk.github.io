"use strict";(self.webpackChunkkywk_me=self.webpackChunkkywk_me||[]).push([["99404"],{12761:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>V,toc:()=>T,default:()=>y,metadata:()=>r,assets:()=>_,contentTitle:()=>b});var r=JSON.parse('{"id":"bootcamp/algorithm/avl","title":"DS: AVL Tree","description":"[DS] AVL Tree","source":"@site/moco/bootcamp/algorithm/avl.mdx","sourceDirName":"bootcamp/algorithm","slug":"/bootcamp/algorithm/avl","permalink":"/moco/bootcamp/algorithm/avl","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Algorithm","permalink":"/moco/tags/algorithm"},{"inline":true,"label":"CS","permalink":"/moco/tags/cs"},{"inline":true,"label":"LeetCode","permalink":"/moco/tags/leet-code"}],"version":"current","frontMatter":{"title":"DS: AVL Tree","description":"[DS] AVL Tree","tags":["Algorithm","CS","LeetCode"],"date_created":"2022-06-01T16:00:00.000Z","image":"https://lh3.googleusercontent.com/pw/AL9nZEUA9Ifvd5Z8SXDWkeVB6AC4MPGwnXaL6kBXNPoXwOQQ2jOcZ1Jw_0p8TKK8C3ZX0e67_FOY15eDrm7aaXSQJcKtoUzC80SAQEHsaBy6qS2AqNNs5VUFNXBKm439y_1wkvmDl-PnL8ReojnIumNlEvOXBg=w800-no?authuser=0"},"sidebar":"tutorialSidebar","previous":{"title":"Awesome Resources","permalink":"/moco/bootcamp/algorithm/awesome"},"next":{"title":"DS: Binary Search Tree","permalink":"/moco/bootcamp/algorithm/bst"}}'),l=t(74848),a=t(84429),o=t(96540),i=t(39836),s=t(16364),d=t(68251),h=t(56347),c=t(28004),u=t(25580),g=t(12213),f=t(75734);function p(e){return o.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function v({value:e,tabValues:n}){return n.some(n=>n.value===e)}var m=t(98864);function A({className:e,block:n,selectedValue:t,selectValue:r,tabValues:a}){let o=[],{blockElementScrollPositionUntilNextRender:s}=(0,d.a_)(),h=e=>{let n=e.currentTarget,l=a[o.indexOf(n)].value;l!==t&&(s(n),r(l))},c=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{let t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1]}}n?.focus()};return(0,l.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:r})=>(0,l.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:c,onClick:h,...r,className:(0,i.A)("tabs__item","tabItem_LNqP",r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function N({lazy:e,children:n,selectedValue:t}){let r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=r.find(e=>e.props.value===t);return e?(0,o.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,l.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function L(e){let n=function(e){let n,{defaultValue:t,queryString:r=!1,groupId:l}=e,a=function(e){let{values:n,children:t}=e;return(0,o.useMemo)(()=>{let e=n??p(t).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r})),r=(0,g.XI)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[i,s]=(0,o.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!v({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:t,tabValues:a})),[d,m]=function({queryString:e=!1,groupId:n}){let t=(0,h.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(r),(0,o.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}({queryString:r,groupId:l}),[A,N]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[t,r]=(0,f.Dv)(n);return[t,(0,o.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:l}),L=v({value:n=d??A,tabValues:a})?n:null;return(0,c.A)(()=>{L&&s(L)},[L]),{selectedValue:i,selectValue:(0,o.useCallback)(e=>{if(!v({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);s(e),m(e),N(e)},[m,N,a]),tabValues:a}}(e);return(0,l.jsxs)("div",{className:(0,i.A)(s.G.tabs.container,"tabs-container","tabList__CuJ"),children:[(0,l.jsx)(A,{...n,...e}),(0,l.jsx)(N,{...n,...e})]})}function x(e){let n=(0,m.A)();return(0,l.jsx)(L,{...e,children:p(e.children)},String(n))}function j({children:e,hidden:n,className:t}){return(0,l.jsx)("div",{role:"tabpanel",className:(0,i.A)("tabItem_Ymn6",t),hidden:n,children:e})}let V={title:"DS: AVL Tree",description:"[DS] AVL Tree",tags:["Algorithm","CS","LeetCode"],date_created:new Date("2022-06-01T16:00:00.000Z"),image:"https://lh3.googleusercontent.com/pw/AL9nZEUA9Ifvd5Z8SXDWkeVB6AC4MPGwnXaL6kBXNPoXwOQQ2jOcZ1Jw_0p8TKK8C3ZX0e67_FOY15eDrm7aaXSQJcKtoUzC80SAQEHsaBy6qS2AqNNs5VUFNXBKm439y_1wkvmDl-PnL8ReojnIumNlEvOXBg=w800-no?authuser=0"},b="[DS] AVL Tree",_={},T=[{value:"Feature",id:"feature",level:2},{value:"extends BST",id:"extends-bst",level:3},{value:"height(v)",id:"heightv",level:3},{value:"Method",id:"method",level:2},{value:"rebalance",id:"rebalance",level:3},{value:"rotate Left/Right",id:"rotate-leftright",level:3},{value:"insert(v)",id:"insertv",level:3},{value:"remove(v)",id:"removev",level:3},{value:"\u5C0F\u7D50",id:"\u5C0F\u7D50",level:2},{value:"See Also",id:"see-also",level:2},{value:"AVL",id:"avl",level:3},{value:"Inheritance \u7E7C\u627F",id:"inheritance-\u7E7C\u627F",level:3}];function S(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"ds-avl-tree",children:"[DS] AVL Tree"})}),"\n",(0,l.jsx)(n.h2,{id:"feature",children:"Feature"}),"\n",(0,l.jsx)(n.p,{children:"A balanced BST is a BST that h = O(log N).\nAVL Tree (Adelson-Velskii & Landis, 1962) that is named after its\ninventor: Adelson-Velskii and Landis."}),"\n",(0,l.jsx)(n.p,{children:"...detail TBD ..."}),"\n",(0,l.jsx)(n.h3,{id:"extends-bst",children:"extends BST"}),"\n",(0,l.jsx)(n.p,{children:"AVL Tree \u4EA6\u662F\u4E00\u7A2E BST, \u6240\u6709\u5C0D BST \u7684\u64CD\u4F5C\u90FD\u9069\u7528\u65BC AVL Tree.\n\u9069\u5408\u985E\u5225\u754C\u9762\u5C01\u88DD\u6982\u5FF5, \u64CD\u4F5C\u6642\u7121\u9808\u8003\u616E\u662F\u7531\u90A3\u4E00\u7A2E Tree \u5BE6\u4F5C, \u900F\u904E\u985E\u5225\u5C01\u88DD\u754C\u9762\u64CD\u4F5C\u5373\u53EF."}),"\n",(0,l.jsx)(n.p,{children:"\u53E6\u4E00\u9EDE\u5247\u662F\u5BE6\u4F5C\u4E0A AVL Tree \u4E2D\u8A31\u591A\u51FD\u5F0F\u90FD\u53EF\u4EE5\u76F4\u63A5\u6CBF\u7528 BST \u754C\u9762,\n\u4E5F\u9069\u5408\u7528\u7E7C\u627F\u4EE5\u5229\u7A0B\u5F0F\u91CD\u8907\u4F7F\u7528\u8207\u7DAD\u8B77."}),"\n",(0,l.jsxs)(x,{children:[(0,l.jsx)(j,{value:"go",label:"Go",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"type AVLNode struct {\n  value  int\n  height int\n  left   *AVLNode\n  right  *AVLNode\n}\n\nfunc newAVLNode(v int) *AVLNode {\n  return &AVLNode{\n    value:  v,\n    height: 1,\n    left:   nil,\n    right:  nil,\n  }\n}\n"})})}),(0,l.jsx)(j,{value:"js",label:"JavaScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"class AVL extends BST {\n  constructor(data) {\n    super()\n    this.root = null\n    if (typeof(data) === 'number') {\n      this.root = new AVLNode(data)\n    } else if (Array.isArray(data)) {\n      this.root = new AVLNode(data[0])\n      for (let i = 1; i < data.length; i++)\n        this.insert(data[i])\n    }\n  }\n}\n\nclass AVLNode extends BSTNode {\n  constructor(data) {\n    super()\n    this.value = data\n    this.left = null\n    this.right = null\n    this.height = 1\n  }\n}\n"})})}),(0,l.jsx)(j,{value:"ts",label:"TypeScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"export class AVL extends BST {\n  constructor(data: number | Array<number>) {\n    super(null)\n    this.root = null\n    if (typeof (data) === 'number') {\n      this.root = new AVLNode(data)\n    } else if (Array.isArray(data)) {\n      this.root = new AVLNode(data[0])\n      for (let i = 1; i < data.length; i++)\n        this.insert(data[i])\n    }\n  }\n}\n\nexport class AVLNode extends BSTNode {\n  left: IAVLNode\n  right: IAVLNode\n  height: number\n\n  constructor(data: number) {\n    super(data)\n    this.left = null\n    this.right = null\n    this.height = 1\n  }\n}\n"})})}),(0,l.jsx)(j,{value:"python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"class AVL(BST):\n    def __init__(self, data):\n        self.root = None\n        if isinstance(data, int):\n            self._root = AVLNode(data)\n        elif isinstance(data, list):\n            self._root = AVLNode(data[0])\n            for i in range(1, len(data), 1):\n                self.insert(data[i])\n\nclass AVLNode(BSTNode):\n    def __init__(self, data):\n        self.value = data\n        self.left = None\n        self.right = None\n        self.height = 1\n"})})})]}),"\n",(0,l.jsx)(n.h3,{id:"heightv",children:"height(v)"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"height(v)"}),": The number of edges on the path from vertex v down to\nits deepest leaf. This attribute is saved in each vertex so we can\naccess a vertex's height in ",(0,l.jsx)(n.strong,{children:"O(1)"})," without having to recompute it\nevery time."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"v.height = -1 (if v is an empty tree)\nv.height = max(v.left.height, v.right.height) + 1 (otherwise)\n\n// Balance Factor\nv.bf = v.left.height - v.right.height\n"})}),"\n",(0,l.jsx)(n.h2,{id:"method",children:"Method"}),"\n",(0,l.jsx)(n.h3,{id:"rebalance",children:"rebalance"}),"\n",(0,l.jsx)(n.p,{children:"AVL Tree needs to check if still balance after modified"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"check balance factor of this and its children\n  case1: this.rotateRight\n  case2: this.left.rotateLeft, this.rotateRight\n  case3: this.rotateLeft\n  case4: this.right.rotateRight, this.rotateLeft\n  this is balanced\n"})}),"\n",(0,l.jsxs)(x,{children:[(0,l.jsx)(j,{value:"go",label:"Go",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"func (n *AVLNode) rotate() *AVLNode {\n  left := n.left.getHeight()\n  right := n.right.getHeight()\n  bf := left - right\n\n  if bf > 1 {\n    if n.left.left.getHeight() < n.left.right.getHeight() {\n      n.left = n.left.rotateLeft()\n    }\n    return n.rotateRight()\n  } else if bf < -1 {\n    if n.right.left.getHeight() > n.right.right.getHeight() {\n      n.right = n.right.rotateRight()\n    }\n    return n.rotateLeft()\n  } else {\n    n.updateHeight()\n    return n\n  }\n}\n"})})}),(0,l.jsx)(j,{value:"js",label:"JavaScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"  // class AVLNode\n  static _rotate(node) {\n    let left = AVLNode._heightHelper(node.left)\n    let right = AVLNode._heightHelper(node.right)\n    let bf = left - right\n\n    if (bf > 1) {\n      if (AVLNode._heightHelper(node.left.left) < AVLNode._heightHelper(node.left.right))\n        node.left = AVLNode._rotateLeft(node.left)\n      return AVLNode._rotateRight(node)\n    } else if (bf < -1) {\n      if (AVLNode._heightHelper(node.right.left) > AVLNode._heightHelper(node.right.right))\n        node.right = AVLNode._rotateRight(node.right)\n      return AVLNode._rotateLeft(node)\n    } else {\n      node._updateHeight()\n      return node\n    }\n  }\n"})})}),(0,l.jsx)(j,{value:"ts",label:"TypeScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"  static rotate(node: IAVLNode): IAVLNode {\n    let left = AVLNode.heightHelper(node!.left)\n    let right = AVLNode.heightHelper(node!.right)\n    let bf = left - right\n\n    if (bf > 1) {\n      if (AVLNode.heightHelper(node!.left!.left) < AVLNode.heightHelper(node!.left!.right))\n        node!.left = AVLNode.rotateLeft(node!.left)\n      return AVLNode.rotateRight(node)\n    } else if (bf < -1) {\n      if (AVLNode.heightHelper(node!.right!.left) > AVLNode.heightHelper(node!.right!.right))\n        node!.right = AVLNode.rotateRight(node!.right)\n      return AVLNode.rotateLeft(node)\n    } else {\n      node!.updateHeight()\n      return node\n    }\n  }\n"})})}),(0,l.jsx)(j,{value:"python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"    @classmethod\n    def rotate(cls, node):\n        left = AVLNode.height_helper(node.left)\n        right = AVLNode.height_helper(node.right)\n        bf = left - right\n\n        if bf > 1:\n            if AVLNode.height_helper(node.left.left) < AVLNode.height_helper(node.left.right):\n                node.left = AVLNode.rotate_left(node.left)\n            return AVLNode.rotate_right(node)\n        elif bf < -1:\n            if AVLNode.height_helper(node.right.left) > AVLNode.height_helper(node.right.right):\n                node.right = AVLNode.rotate_right(node.right)\n            return AVLNode.rotate_left(node)\n        else:\n            node.update_height()\n            return node\n"})})})]}),"\n",(0,l.jsx)(n.h3,{id:"rotate-leftright",children:"rotate Left/Right"}),"\n",(0,l.jsxs)(x,{children:[(0,l.jsx)(j,{value:"go",label:"Go",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"func (n *AVLNode) rotateLeft() *AVLNode {\n  result := n.right\n  t := result.left\n\n  n.right = t\n  n.height--\n\n  result.left = n\n  return result\n}\n\nfunc (n *AVLNode) rotateRight() *AVLNode {\n  result := n.left\n  t := result.right\n\n  n.left = t\n  n.height--\n\n  result.right = n\n  return result\n}\n"})})}),(0,l.jsx)(j,{value:"js",label:"JavaScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"  // class AVLNode\n  static _rotateLeft(node) {\n    let result = node.right\n    let t = result.left\n\n    node.right = t\n    node.height--\n\n    result.left = node\n    return result\n  }\n\n  static _rotateRight(node) {\n    let result = node.left\n    let t = result.right\n\n    node.left = t\n    node.height--\n\n    result.right = node\n    return result\n  }\n"})})}),(0,l.jsx)(j,{value:"ts",label:"TypeScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"  // class AVLNode\n  static rotateLeft(node: IAVLNode): IAVLNode {\n    let result = node!.right\n    let t = result!.left\n\n    node!.right = t\n    node!.height--\n\n    result!.left = node\n    return result\n  }\n\n  static rotateRight(node: IAVLNode): IAVLNode {\n    let result = node!.left\n    let t = result!.right\n\n    node!.left = t\n    node!.height--\n\n    result!.right = node\n    return result\n  }\n"})})}),(0,l.jsx)(j,{value:"python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"    @classmethod\n    def rotate_left(cls, node):\n        result = node.right\n        t = result.left\n\n        node.right = t\n        node.height = node.height - 1\n\n        result.left = node\n        return result\n\n    @classmethod\n    def rotate_right(cls, node):\n        result = node.left\n        t = result.right\n\n        node.left = t\n        node.height = node.height - 1\n\n        result.right = node\n        return result\n"})})})]}),"\n",(0,l.jsx)(n.h3,{id:"insertv",children:"insert(v)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"insert v\nrebalance tree\n"})}),"\n",(0,l.jsxs)(x,{children:[(0,l.jsx)(j,{value:"go",label:"Go",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"func (n *AVLNode) insert(val int) IBSTNode {\n  return n.insertHelper(val)\n}\n\nfunc (n *AVLNode) insertHelper(val int) *AVLNode {\n  if n == nil { return newAVLNode(val) }\n\n  if n.value > val { n.left = n.left.insertHelper(val) } \n  else { n.right = n.right.insertHelper(val) }\n\n  return n.rotate()\n}\n"})})}),(0,l.jsx)(j,{value:"js",label:"JavaScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"  // class AVLNode\n  insert(val) {\n    return AVLNode._insertHelper(val, this)\n  }\n\n  static _insertHelper(val, node) {\n    if (node === null)\n      return new AVLNode(val)\n    if (node.value > val)\n      node.left = AVLNode._insertHelper(val, node.left)\n    else\n      node.right = AVLNode._insertHelper(val, node.right)\n    return AVLNode._rotate(node)\n  }\n"})})}),(0,l.jsx)(j,{value:"ts",label:"TypeScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"  // class AVLNode\n  public insert(val: number): IAVLNode {\n    return AVLNode.insertHelper(val, this)\n  }\n\n  static insertHelper(val: number, node: IAVLNode): IAVLNode {\n    if (node === null)\n      return new AVLNode(val)\n    if (node.value > val)\n      node.left = AVLNode.insertHelper(val, node.left)\n    else\n      node.right = AVLNode.insertHelper(val, node.right)\n    return AVLNode.rotate(node)\n  }\n"})})}),(0,l.jsx)(j,{value:"python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"    # class AVL\n    def insert(self, val):\n        if self._root is None:\n            self._root = AVLNode(val)\n        self._root = self._root.insert(val)\n\n    # class AVLNode\n    def insert(self, val):\n        return AVLNode.insert_helper(val, self)\n\n    @classmethod\n    def insert_helper(cls, val, node):\n        if node is None:\n            return AVLNode(val)\n        if val < node.value:\n            node.left = AVLNode.insert_helper(val, node.left)\n        else:\n            node.right = AVLNode.insert_helper(val, node.right)\n        return AVLNode.rotate(node)\n\n"})})})]}),"\n",(0,l.jsx)(n.h3,{id:"removev",children:"remove(v)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"remove v\nrebalance tree\n"})}),"\n",(0,l.jsxs)(x,{children:[(0,l.jsx)(j,{value:"go",label:"Go",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-go",children:"func (n *AVLNode) remove(val int) IBSTNode {\n  return n.removeHelper(val)\n}\n\nfunc (n *AVLNode) removeHelper(val int) *AVLNode {\n  // remove v: same as BSTNode \n  // ,,,\n  return n.rotate()\n}\n"})})}),(0,l.jsx)(j,{value:"js",label:"JavaScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"  remove (val) {\n    return AVLNode._removeHelper(val, this)\n  }\n\n  static _removeHelper(val, node) {\n    // remove v: same as BSTNode \n    // ...\n    return AVLNode._rotate(node)\n  }\n"})})}),(0,l.jsx)(j,{value:"ts",label:"TypeScript",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"  public remove (val: number): IAVLNode {\n    return AVLNode.removeHelper(val, this)\n  }\n\n  static removeHelper(val:number, node: IAVLNode): IAVLNode {\n    // remove v: same as BSTNode \n    // ...\n    return AVLNode.rotate(node)\n  }\n"})})}),(0,l.jsx)(j,{value:"python",label:"Python",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"    def remove(self, val):\n        return AVLNode.remove_helper(val, self)\n\n    @classmethod\n    def remove_helper(cls, val, node):\n        # remove v: same as BSTNode \n        # ...\n        return AVLNode.rotate(node)\n"})})})]}),"\n",(0,l.jsx)(n.h2,{id:"\u5C0F\u7D50",children:"\u5C0F\u7D50"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"/moco/bootcamp/algorithm/heap",children:"Binary Heap"})," \u4E00\u4E9B\u7279\u6027\u9069\u5408\u7DF4\u7FD2\u8207\u89E3\u91CB Class \u4E2D\u7684 private / public / class method.\n\u800C BST / AVL Tree \u5247\u5F88\u9069\u5408 OOP \u4E2D\u7684\u7E7C\u627F\u548C\u5C01\u88DD\u6982\u5FF5."]}),"\n",(0,l.jsx)(n.p,{children:"\u9019\u7BC7\u76E1\u91CF\u4EE5\u5404\u8A9E\u8A00\u4E2D\u539F\u751F\u6216\u6A21\u64EC\u7E7C\u627F\u7684\u65B9\u5F0F\u5BE6\u4F5C AVL \u5C0D BST \u7684\u7E7C\u627F.\n\u800C\u9650\u65BC Golang \u7684\u7279\u6027, \u7E7C\u627F\u548C Overriding \u6703\u8B93\u7A0B\u5F0F\u8B8A\u5F97\u904E\u65BC\u8907\u96DC,\n\u53CD\u5012\u5931\u53BB Golang keep in simple \u54F2\u5B78, \u50C5\u7528 interface \u4F86\u5C01\u88DD AVL Tree Node."}),"\n",(0,l.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,l.jsx)(n.h3,{id:"avl",children:"AVL"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://visualgo.net/en/bst",children:"Binary Search Tree, AVL Tree - VisuAlgo"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"inheritance-\u7E7C\u627F",children:"Inheritance \u7E7C\u627F"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Golang","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://opensourcedoc.com/golang-programming/interface/",children:"[Golang] \u7A0B\u5F0F\u8A2D\u8A08\u6559\u5B78\uFF1A\u7528\u4ECB\u9762 (Interface) \u5BE6\u8E10\u7E7C\u627F\u548C\u591A\u578B | \u958B\u6E90\u6280\u8853\u6559\u5B78\u7DB2"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://learnku.com/articles/32295",children:"\u79D2\u61C2 go \u8BED\u8A00\u7684\u7EE7\u627F | Go \u6280\u672F\u8BBA\u575B"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://www.gushiciku.cn/pl/2txm/zh-tw",children:"Golang OOP\u3001\u7E7C\u627F\u3001\u7D44\u5408\u3001\u4ECB\u9762_Go\u8A9E\u8A00\u4E2D\u6587\u7DB2 - MdEditor"})}),"\n"]}),"\n"]}),"\n"]})]})}function y(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(S,{...e})}):S(e)}},84429:function(e,n,t){t.d(n,{R:()=>o,x:()=>i});var r=t(96540);let l={},a=r.createContext(l);function o(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);