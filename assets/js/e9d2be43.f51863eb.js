"use strict";(self.webpackChunkblog_kywk=self.webpackChunkblog_kywk||[]).push([[40986],{76237:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var r=t(85893),l=t(11151),a=t(74866),o=t(85162);const i={title:"DS: AVL Tree",description:"[DS] AVL Tree",tags:["Algorithm","CS","LeetCode"],created:new Date("2022-06-01T16:00:00.000Z"),image:"https://lh3.googleusercontent.com/pw/AL9nZEUA9Ifvd5Z8SXDWkeVB6AC4MPGwnXaL6kBXNPoXwOQQ2jOcZ1Jw_0p8TKK8C3ZX0e67_FOY15eDrm7aaXSQJcKtoUzC80SAQEHsaBy6qS2AqNNs5VUFNXBKm439y_1wkvmDl-PnL8ReojnIumNlEvOXBg=w800-no?authuser=0"},s="[DS] AVL Tree",d={id:"bootcamp/algorithm/avl",title:"DS: AVL Tree",description:"[DS] AVL Tree",source:"@site/moco/bootcamp/algorithm/avl.md",sourceDirName:"bootcamp/algorithm",slug:"/bootcamp/algorithm/avl",permalink:"/moco/bootcamp/algorithm/avl",draft:!1,unlisted:!1,tags:[{label:"Algorithm",permalink:"/moco/tags/algorithm"},{label:"CS",permalink:"/moco/tags/cs"},{label:"LeetCode",permalink:"/moco/tags/leet-code"}],version:"current",frontMatter:{title:"DS: AVL Tree",description:"[DS] AVL Tree",tags:["Algorithm","CS","LeetCode"],created:"2022-06-01T16:00:00.000Z",image:"https://lh3.googleusercontent.com/pw/AL9nZEUA9Ifvd5Z8SXDWkeVB6AC4MPGwnXaL6kBXNPoXwOQQ2jOcZ1Jw_0p8TKK8C3ZX0e67_FOY15eDrm7aaXSQJcKtoUzC80SAQEHsaBy6qS2AqNNs5VUFNXBKm439y_1wkvmDl-PnL8ReojnIumNlEvOXBg=w800-no?authuser=0"},sidebar:"tutorialSidebar",previous:{title:"Awesome Resources",permalink:"/moco/bootcamp/algorithm/awesome"},next:{title:"DS: Binary Search Tree",permalink:"/moco/bootcamp/algorithm/bst"}},h={},c=[{value:"Feature",id:"feature",level:2},{value:"extends BST",id:"extends-bst",level:3},{value:"height(v)",id:"heightv",level:3},{value:"Method",id:"method",level:2},{value:"rebalance",id:"rebalance",level:3},{value:"rotate Left/Right",id:"rotate-leftright",level:3},{value:"insert(v)",id:"insertv",level:3},{value:"remove(v)",id:"removev",level:3},{value:"\u5c0f\u7d50",id:"\u5c0f\u7d50",level:2},{value:"See Also",id:"see-also",level:2},{value:"AVL",id:"avl",level:3},{value:"Inheritance \u7e7c\u627f",id:"inheritance-\u7e7c\u627f",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"ds-avl-tree",children:"[DS] AVL Tree"}),"\n",(0,r.jsx)(n.h2,{id:"feature",children:"Feature"}),"\n",(0,r.jsx)(n.p,{children:"A balanced BST is a BST that h = O(log N).\nAVL Tree (Adelson-Velskii & Landis, 1962) that is named after its\ninventor: Adelson-Velskii and Landis."}),"\n",(0,r.jsx)(n.p,{children:"...detail TBD ..."}),"\n",(0,r.jsx)(n.h3,{id:"extends-bst",children:"extends BST"}),"\n",(0,r.jsx)(n.p,{children:"AVL Tree \u4ea6\u662f\u4e00\u7a2e BST, \u6240\u6709\u5c0d BST \u7684\u64cd\u4f5c\u90fd\u9069\u7528\u65bc AVL Tree.\n\u9069\u5408\u985e\u5225\u754c\u9762\u5c01\u88dd\u6982\u5ff5, \u64cd\u4f5c\u6642\u7121\u9808\u8003\u616e\u662f\u7531\u90a3\u4e00\u7a2e Tree \u5be6\u4f5c, \u900f\u904e\u985e\u5225\u5c01\u88dd\u754c\u9762\u64cd\u4f5c\u5373\u53ef."}),"\n",(0,r.jsx)(n.p,{children:"\u53e6\u4e00\u9ede\u5247\u662f\u5be6\u4f5c\u4e0a AVL Tree \u4e2d\u8a31\u591a\u51fd\u5f0f\u90fd\u53ef\u4ee5\u76f4\u63a5\u6cbf\u7528 BST \u754c\u9762,\n\u4e5f\u9069\u5408\u7528\u7e7c\u627f\u4ee5\u5229\u7a0b\u5f0f\u91cd\u8907\u4f7f\u7528\u8207\u7dad\u8b77."}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(o.Z,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"type AVLNode struct {\n  value  int\n  height int\n  left   *AVLNode\n  right  *AVLNode\n}\n\nfunc newAVLNode(v int) *AVLNode {\n  return &AVLNode{\n    value:  v,\n    height: 1,\n    left:   nil,\n    right:  nil,\n  }\n}\n"})})}),(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"class AVL extends BST {\n  constructor(data) {\n    super()\n    this.root = null\n    if (typeof(data) === 'number') {\n      this.root = new AVLNode(data)\n    } else if (Array.isArray(data)) {\n      this.root = new AVLNode(data[0])\n      for (let i = 1; i < data.length; i++)\n        this.insert(data[i])\n    }\n  }\n}\n\nclass AVLNode extends BSTNode {\n  constructor(data) {\n    super()\n    this.value = data\n    this.left = null\n    this.right = null\n    this.height = 1\n  }\n}\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export class AVL extends BST {\n  constructor(data: number | Array<number>) {\n    super(null)\n    this.root = null\n    if (typeof (data) === 'number') {\n      this.root = new AVLNode(data)\n    } else if (Array.isArray(data)) {\n      this.root = new AVLNode(data[0])\n      for (let i = 1; i < data.length; i++)\n        this.insert(data[i])\n    }\n  }\n}\n\nexport class AVLNode extends BSTNode {\n  left: IAVLNode\n  right: IAVLNode\n  height: number\n\n  constructor(data: number) {\n    super(data)\n    this.left = null\n    this.right = null\n    this.height = 1\n  }\n}\n"})})}),(0,r.jsx)(o.Z,{value:"python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class AVL(BST):\n    def __init__(self, data):\n        self.root = None\n        if isinstance(data, int):\n            self._root = AVLNode(data)\n        elif isinstance(data, list):\n            self._root = AVLNode(data[0])\n            for i in range(1, len(data), 1):\n                self.insert(data[i])\n\nclass AVLNode(BSTNode):\n    def __init__(self, data):\n        self.value = data\n        self.left = None\n        self.right = None\n        self.height = 1\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"heightv",children:"height(v)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"height(v)"}),": The number of edges on the path from vertex v down to\nits deepest leaf. This attribute is saved in each vertex so we can\naccess a vertex's height in ",(0,r.jsx)(n.strong,{children:"O(1)"})," without having to recompute it\nevery time."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"v.height = -1 (if v is an empty tree)\nv.height = max(v.left.height, v.right.height) + 1 (otherwise)\n\n// Balance Factor\nv.bf = v.left.height - v.right.height\n"})}),"\n",(0,r.jsx)(n.h2,{id:"method",children:"Method"}),"\n",(0,r.jsx)(n.h3,{id:"rebalance",children:"rebalance"}),"\n",(0,r.jsx)(n.p,{children:"AVL Tree needs to check if still balance after modified"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"check balance factor of this and its children\n  case1: this.rotateRight\n  case2: this.left.rotateLeft, this.rotateRight\n  case3: this.rotateLeft\n  case4: this.right.rotateRight, this.rotateLeft\n  this is balanced\n"})}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(o.Z,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (n *AVLNode) rotate() *AVLNode {\n  left := n.left.getHeight()\n  right := n.right.getHeight()\n  bf := left - right\n\n  if bf > 1 {\n    if n.left.left.getHeight() < n.left.right.getHeight() {\n      n.left = n.left.rotateLeft()\n    }\n    return n.rotateRight()\n  } else if bf < -1 {\n    if n.right.left.getHeight() > n.right.right.getHeight() {\n      n.right = n.right.rotateRight()\n    }\n    return n.rotateLeft()\n  } else {\n    n.updateHeight()\n    return n\n  }\n}\n"})})}),(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"  // class AVLNode\n  static _rotate(node) {\n    let left = AVLNode._heightHelper(node.left)\n    let right = AVLNode._heightHelper(node.right)\n    let bf = left - right\n\n    if (bf > 1) {\n      if (AVLNode._heightHelper(node.left.left) < AVLNode._heightHelper(node.left.right))\n        node.left = AVLNode._rotateLeft(node.left)\n      return AVLNode._rotateRight(node)\n    } else if (bf < -1) {\n      if (AVLNode._heightHelper(node.right.left) > AVLNode._heightHelper(node.right.right))\n        node.right = AVLNode._rotateRight(node.right)\n      return AVLNode._rotateLeft(node)\n    } else {\n      node._updateHeight()\n      return node\n    }\n  }\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"  static rotate(node: IAVLNode): IAVLNode {\n    let left = AVLNode.heightHelper(node!.left)\n    let right = AVLNode.heightHelper(node!.right)\n    let bf = left - right\n\n    if (bf > 1) {\n      if (AVLNode.heightHelper(node!.left!.left) < AVLNode.heightHelper(node!.left!.right))\n        node!.left = AVLNode.rotateLeft(node!.left)\n      return AVLNode.rotateRight(node)\n    } else if (bf < -1) {\n      if (AVLNode.heightHelper(node!.right!.left) > AVLNode.heightHelper(node!.right!.right))\n        node!.right = AVLNode.rotateRight(node!.right)\n      return AVLNode.rotateLeft(node)\n    } else {\n      node!.updateHeight()\n      return node\n    }\n  }\n"})})}),(0,r.jsx)(o.Z,{value:"python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    @classmethod\n    def rotate(cls, node):\n        left = AVLNode.height_helper(node.left)\n        right = AVLNode.height_helper(node.right)\n        bf = left - right\n\n        if bf > 1:\n            if AVLNode.height_helper(node.left.left) < AVLNode.height_helper(node.left.right):\n                node.left = AVLNode.rotate_left(node.left)\n            return AVLNode.rotate_right(node)\n        elif bf < -1:\n            if AVLNode.height_helper(node.right.left) > AVLNode.height_helper(node.right.right):\n                node.right = AVLNode.rotate_right(node.right)\n            return AVLNode.rotate_left(node)\n        else:\n            node.update_height()\n            return node\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"rotate-leftright",children:"rotate Left/Right"}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(o.Z,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (n *AVLNode) rotateLeft() *AVLNode {\n  result := n.right\n  t := result.left\n\n  n.right = t\n  n.height--\n\n  result.left = n\n  return result\n}\n\nfunc (n *AVLNode) rotateRight() *AVLNode {\n  result := n.left\n  t := result.right\n\n  n.left = t\n  n.height--\n\n  result.right = n\n  return result\n}\n"})})}),(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"  // class AVLNode\n  static _rotateLeft(node) {\n    let result = node.right\n    let t = result.left\n\n    node.right = t\n    node.height--\n\n    result.left = node\n    return result\n  }\n\n  static _rotateRight(node) {\n    let result = node.left\n    let t = result.right\n\n    node.left = t\n    node.height--\n\n    result.right = node\n    return result\n  }\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"  // class AVLNode\n  static rotateLeft(node: IAVLNode): IAVLNode {\n    let result = node!.right\n    let t = result!.left\n\n    node!.right = t\n    node!.height--\n\n    result!.left = node\n    return result\n  }\n\n  static rotateRight(node: IAVLNode): IAVLNode {\n    let result = node!.left\n    let t = result!.right\n\n    node!.left = t\n    node!.height--\n\n    result!.right = node\n    return result\n  }\n"})})}),(0,r.jsx)(o.Z,{value:"python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    @classmethod\n    def rotate_left(cls, node):\n        result = node.right\n        t = result.left\n\n        node.right = t\n        node.height = node.height - 1\n\n        result.left = node\n        return result\n\n    @classmethod\n    def rotate_right(cls, node):\n        result = node.left\n        t = result.right\n\n        node.left = t\n        node.height = node.height - 1\n\n        result.right = node\n        return result\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"insertv",children:"insert(v)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"insert v\nrebalance tree\n"})}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(o.Z,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (n *AVLNode) insert(val int) IBSTNode {\n  return n.insertHelper(val)\n}\n\nfunc (n *AVLNode) insertHelper(val int) *AVLNode {\n  if n == nil { return newAVLNode(val) }\n\n  if n.value > val { n.left = n.left.insertHelper(val) } \n  else { n.right = n.right.insertHelper(val) }\n\n  return n.rotate()\n}\n"})})}),(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"  // class AVLNode\n  insert(val) {\n    return AVLNode._insertHelper(val, this)\n  }\n\n  static _insertHelper(val, node) {\n    if (node === null)\n      return new AVLNode(val)\n    if (node.value > val)\n      node.left = AVLNode._insertHelper(val, node.left)\n    else\n      node.right = AVLNode._insertHelper(val, node.right)\n    return AVLNode._rotate(node)\n  }\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"  // class AVLNode\n  public insert(val: number): IAVLNode {\n    return AVLNode.insertHelper(val, this)\n  }\n\n  static insertHelper(val: number, node: IAVLNode): IAVLNode {\n    if (node === null)\n      return new AVLNode(val)\n    if (node.value > val)\n      node.left = AVLNode.insertHelper(val, node.left)\n    else\n      node.right = AVLNode.insertHelper(val, node.right)\n    return AVLNode.rotate(node)\n  }\n"})})}),(0,r.jsx)(o.Z,{value:"python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    # class AVL\n    def insert(self, val):\n        if self._root is None:\n            self._root = AVLNode(val)\n        self._root = self._root.insert(val)\n\n    # class AVLNode\n    def insert(self, val):\n        return AVLNode.insert_helper(val, self)\n\n    @classmethod\n    def insert_helper(cls, val, node):\n        if node is None:\n            return AVLNode(val)\n        if val < node.value:\n            node.left = AVLNode.insert_helper(val, node.left)\n        else:\n            node.right = AVLNode.insert_helper(val, node.right)\n        return AVLNode.rotate(node)\n\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"removev",children:"remove(v)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"remove v\nrebalance tree\n"})}),"\n",(0,r.jsxs)(a.Z,{children:[(0,r.jsx)(o.Z,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func (n *AVLNode) remove(val int) IBSTNode {\n  return n.removeHelper(val)\n}\n\nfunc (n *AVLNode) removeHelper(val int) *AVLNode {\n  // remove v: same as BSTNode \n  // ,,,\n  return n.rotate()\n}\n"})})}),(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"  remove (val) {\n    return AVLNode._removeHelper(val, this)\n  }\n\n  static _removeHelper(val, node) {\n    // remove v: same as BSTNode \n    // ...\n    return AVLNode._rotate(node)\n  }\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"  public remove (val: number): IAVLNode {\n    return AVLNode.removeHelper(val, this)\n  }\n\n  static removeHelper(val:number, node: IAVLNode): IAVLNode {\n    // remove v: same as BSTNode \n    // ...\n    return AVLNode.rotate(node)\n  }\n"})})}),(0,r.jsx)(o.Z,{value:"python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"    def remove(self, val):\n        return AVLNode.remove_helper(val, self)\n\n    @classmethod\n    def remove_helper(cls, val, node):\n        # remove v: same as BSTNode \n        # ...\n        return AVLNode.rotate(node)\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"\u5c0f\u7d50",children:"\u5c0f\u7d50"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/moco/bootcamp/algorithm/heap",children:"Binary Heap"})," \u4e00\u4e9b\u7279\u6027\u9069\u5408\u7df4\u7fd2\u8207\u89e3\u91cb Class \u4e2d\u7684 private / public / class method.\n\u800c BST / AVL Tree \u5247\u5f88\u9069\u5408 OOP \u4e2d\u7684\u7e7c\u627f\u548c\u5c01\u88dd\u6982\u5ff5."]}),"\n",(0,r.jsx)(n.p,{children:"\u9019\u7bc7\u76e1\u91cf\u4ee5\u5404\u8a9e\u8a00\u4e2d\u539f\u751f\u6216\u6a21\u64ec\u7e7c\u627f\u7684\u65b9\u5f0f\u5be6\u4f5c AVL \u5c0d BST \u7684\u7e7c\u627f.\n\u800c\u9650\u65bc Golang \u7684\u7279\u6027, \u7e7c\u627f\u548c Overriding \u6703\u8b93\u7a0b\u5f0f\u8b8a\u5f97\u904e\u65bc\u8907\u96dc,\n\u53cd\u5012\u5931\u53bb Golang keep in simple \u54f2\u5b78, \u50c5\u7528 interface \u4f86\u5c01\u88dd AVL Tree Node."}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsx)(n.h3,{id:"avl",children:"AVL"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://visualgo.net/en/bst",children:"Binary Search Tree, AVL Tree - VisuAlgo"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"inheritance-\u7e7c\u627f",children:"Inheritance \u7e7c\u627f"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Golang","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://opensourcedoc.com/golang-programming/interface/",children:"[Golang] \u7a0b\u5f0f\u8a2d\u8a08\u6559\u5b78\uff1a\u7528\u4ecb\u9762 (Interface) \u5be6\u8e10\u7e7c\u627f\u548c\u591a\u578b | \u958b\u6e90\u6280\u8853\u6559\u5b78\u7db2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://learnku.com/articles/32295",children:"\u79d2\u61c2 go \u8bed\u8a00\u7684\u7ee7\u627f | Go \u6280\u672f\u8bba\u575b"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.gushiciku.cn/pl/2txm/zh-tw",children:"Golang OOP\u3001\u7e7c\u627f\u3001\u7d44\u5408\u3001\u4ecb\u9762_Go\u8a9e\u8a00\u4e2d\u6587\u7db2 - MdEditor"})}),"\n"]}),"\n"]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>o});t(67294);var r=t(36905);const l={tabItem:"tabItem_Ymn6"};var a=t(85893);function o(e){let{children:n,hidden:t,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>x});var r=t(67294),l=t(36905),a=t(12466),o=t(16550),i=t(20469),s=t(91980),d=t(67392),h=t(50012);function c(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:l}}=e;return{value:n,label:t,attributes:r,default:l}}))}(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const l=(0,o.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(l.location.search);n.set(a,e),l.replace({...l.location,search:n.toString()})}),[a,l])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:l}=e,a=u(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[d,c]=f({queryString:t,groupId:l}),[v,p]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[l,a]=(0,h.Nk)(t);return[l,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:l}),m=(()=>{const e=d??v;return g({value:e,tabValues:a})?e:null})();(0,i.Z)((()=>{m&&s(m)}),[m]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),p(e)}),[c,p,a]),tabValues:a}}var p=t(72389);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var N=t(85893);function A(e){let{className:n,block:t,selectedValue:r,selectValue:o,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.o5)(),h=e=>{const n=e.currentTarget,t=s.indexOf(n),l=i[t].value;l!==r&&(d(n),o(l))},c=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return(0,N.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,N.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>s.push(e),onKeyDown:c,onClick:h,...a,className:(0,l.Z)("tabs__item",m.tabItem,a?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function L(e){let{lazy:n,children:t,selectedValue:l}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===l));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,N.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function V(e){const n=v(e);return(0,N.jsxs)("div",{className:(0,l.Z)("tabs-container",m.tabList),children:[(0,N.jsx)(A,{...e,...n}),(0,N.jsx)(L,{...e,...n})]})}function x(e){const n=(0,p.Z)();return(0,N.jsx)(V,{...e,children:c(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var r=t(67294);const l={},a=r.createContext(l);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);